
@model StockIndicator.Web.Models.StockCheckerModel
@{
    ViewData["Title"] = "StockChecker";
}

<head>
    <meta http-equiv="refresh" content="@Html.DisplayFor(model => model.SleepTime)" />
</head>

<body> 
    @{ 
        if(Model.Results != null)
        { 
        if (Model.Results.Contains(false))
        {
            <div class="alert alert-danger" role="alert" style="font-weight: bold; color: black;">
                A PRODUCT IS CURRENTLY OUT OF STOCK. LAST CHECK: @DateTime.UtcNow.ToLongTimeString()
            </div>
            }

            if (Model.Results.Contains(true))
            {
            <div class="alert alert-primary" style="font-weight: bold;" role="alert">
                A PRODUCTS ARE BACK IN STOCK.
            </div>

            <audio autoplay>
                <source type="audio/mp3" src="~/audio/No Copyright _ Oh My God Wow Sound Effect.mp3" />
            </audio>

                }
            }
        }

        <div class="container" style="max-width:50%;">
            <form method="post">
                <div class="form-group">
                    <label style="font-weight: bold; color: white;">NUMBER OF PRODUCTS</label>
                    <input class="form-control" asp-for="NoOfUrls" />
                </div>
                @if (Model.NoOfUrls > 0)
                {
                    <div class="form-group">
                        <label style="font-weight: bold; color: white;">TIMER</label>
                        <input class="form-control" asp-for="SleepTime" />
                    </div>
                }

                    <div class="form-group">
                        @if (Model.NoOfUrls > 0)
                        {
                            <label style="font-weight: bold; color: white;"> URL</label>
                        }
                        @for (int i = 0; i < Model.NoOfUrls; i++)
                        {
                            <input class="form-control" asp-for="URLS" value=" " />

                        }
                    </div>

                    <button type="submit" class="btn btn-primary" style="font-weight: bold; color: white;">SUBMIT</button>
                    @if (Model.UrlCookies != null)
                    {
                        <div class="spinner-border" role="status" style="color:white;">
                            <span class="sr-only">Checking Stock...</span>
                        </div>
                    }
                </form>
        </div>
</body>

<div class="container" style="max-width:50%;">
    <table class="table table-borderless" style="font-weight: bold; color: white;">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">URL</th>
                <th scope="col">RETAILER</th>
                <th scope="col">STATUS</th>
            </tr>
        </thead>
       
        @if(Model.URLS != null)
        {
            for (int i = 0; i < Model.NoOfUrls; i++)
            {
            <tbody>
                <tr>
                    <th scope="row">@(i+1)</th>
                    <td>
                        <a href="@Model.URLS[i].ToString()">LINK</a>
                    </td>
                    <td>@Model.Retailers[i].ToString().ToUpper()</td>
                    @if (Model.Results[i] == true)
                    {
                        <td style="color:lawngreen;">@Model.Results[i].ToString().ToUpper()</td>
                    }
                    else
                    {
                        <td style="color:red;">@Model.Results[i].ToString().ToUpper()</td>       
                    }
                </tr>
            </tbody>
            }
        }
    </table>
</div>


    <script type="text/javascript">
        let counter = 1;
        setInterval(() => {
            counter++;
        }, 1000);
    </script>
